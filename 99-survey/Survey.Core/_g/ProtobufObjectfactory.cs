// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtobufObjectfactory

#region Designer generated code

using Google.Protobuf;
using DotBPE.Protobuf;
using Microsoft.Extensions.Logging;

namespace Survey.Core
{
    public class ProtobufObjectFactory:IProtobufObjectFactory
    {
        private ILogger _logger;
        public ProtobufObjectFactory(ILogger<ProtobufObjectFactory> logger)
        {
            _logger = logger;
        }
        public IMessage GetRequestTemplate(int serviceId, int messageId)
        {
            _logger.LogDebug("get request template serviceId={serviceId},messageId={messageId}", serviceId, messageId);

            if (serviceId == 10000 && messageId == 11)
            {
                return new SaveQPaperReq();
            }

            if (serviceId == 10000 && messageId == 12)
            {
                return new QueryQPaperReq();
            }

            if (serviceId == 10000 && messageId == 13)
            {
                return new GetQPaperReq();
            }

            if (serviceId == 10000 && messageId == 14)
            {
                return new GetQPaperReq();
            }

            if (serviceId == 10000 && messageId == 21)
            {
                return new SaveAPaperReq();
            }

            if (serviceId == 10000 && messageId == 22)
            {
                return new QueryAPaperReq();
            }

            if (serviceId == 10000 && messageId == 23)
            {
                return new GetAPaperReq();
            }

            if (serviceId == 10000 && messageId == 24)
            {
                return new GetQPaperStaReq();
            }

            if (serviceId == 10001 && messageId == 31)
            {
                return new RegisterReq();
            }

            if (serviceId == 10001 && messageId == 32)
            {
                return new LoginReq();
            }

            if (serviceId == 10001 && messageId == 33)
            {
                return new EditUserReq();
            }

            if (serviceId == 10001 && messageId == 34)
            {
                return new CheckLoginReq();
            }

            return null;
        }

        public IMessage GetResponseTemplate(int serviceId, int messageId)
        {
            _logger.LogDebug("get response template serviceId={serviceId},messageId={messageId}", serviceId, messageId);

            if (serviceId == 10000 && messageId == 11)
            {
                return new SaveQPaperRsp();
            }

            if (serviceId == 10000 && messageId == 12)
            {
                return new QPaperListRsp();
            }

            if (serviceId == 10000 && messageId == 13)
            {
                return new QPaperRsp();
            }

            if (serviceId == 10000 && messageId == 14)
            {
                return new QPaperFullRsp();
            }

            if (serviceId == 10000 && messageId == 21)
            {
                return new SaveAPaperRsp();
            }

            if (serviceId == 10000 && messageId == 22)
            {
                return new APaperListRsp();
            }

            if (serviceId == 10000 && messageId == 23)
            {
                return new APaperRsp();
            }

            if (serviceId == 10000 && messageId == 24)
            {
                return new QPaperStaRsp();
            }

            if (serviceId == 10001 && messageId == 31)
            {
                return new RegisterRsp();
            }

            if (serviceId == 10001 && messageId == 32)
            {
                return new LoginRsp();
            }

            if (serviceId == 10001 && messageId == 33)
            {
                return new EditUserRsp();
            }

            if (serviceId == 10001 && messageId == 34)
            {
                return new GetUserRsp();
            }

            return null;
        }
    }
}

#endregion Designer generated code