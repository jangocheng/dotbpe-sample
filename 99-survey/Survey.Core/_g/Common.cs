// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message/common.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Survey.Core {

  /// <summary>Holder for reflection information generated from message/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for message/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRtZXNzYWdlL2NvbW1vbi5wcm90bxIGZG90YnBlIgkKB1ZvaWRSZXEiIQoH",
            "Vm9pZFJzcBIWCg5yZXR1cm5fbWVzc2FnZRgBIAEoCSIyCg9BUGFwZXJTdGFE",
            "ZXRhaWwSEwoLcXVlc3Rpb25faWQYCiABKAkSCgoCb2EYCyADKAVCEEgBqgIL",
            "U3VydmV5LkNvcmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Core.VoidReq), global::Survey.Core.VoidReq.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Core.VoidRsp), global::Survey.Core.VoidRsp.Parser, new[]{ "ReturnMessage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Survey.Core.APaperStaDetail), global::Survey.Core.APaperStaDetail.Parser, new[]{ "QuestionId", "Oa" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  什么字段都没有，请求
  /// </summary>
  public sealed partial class VoidReq : pb::IMessage<VoidReq> {
    private static readonly pb::MessageParser<VoidReq> _parser = new pb::MessageParser<VoidReq>(() => new VoidReq());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoidReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Core.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidReq(VoidReq other) : this() {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidReq Clone() {
      return new VoidReq(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoidReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoidReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoidReq other) {
      if (other == null) {
        return;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

  }

  /// <summary>
  ///  只返回默认的返回
  /// </summary>
  public sealed partial class VoidRsp : pb::IMessage<VoidRsp> {
    private static readonly pb::MessageParser<VoidRsp> _parser = new pb::MessageParser<VoidRsp>(() => new VoidRsp());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VoidRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Core.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRsp(VoidRsp other) : this() {
      returnMessage_ = other.returnMessage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VoidRsp Clone() {
      return new VoidRsp(this);
    }

    /// <summary>Field number for the "return_message" field.</summary>
    public const int ReturnMessageFieldNumber = 1;
    private string returnMessage_ = "";
    /// <summary>
    /// 返回错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReturnMessage {
      get { return returnMessage_; }
      set {
        returnMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VoidRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VoidRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReturnMessage != other.ReturnMessage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReturnMessage.Length != 0) hash ^= ReturnMessage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ReturnMessage.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReturnMessage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReturnMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReturnMessage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VoidRsp other) {
      if (other == null) {
        return;
      }
      if (other.ReturnMessage.Length != 0) {
        ReturnMessage = other.ReturnMessage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            ReturnMessage = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class APaperStaDetail : pb::IMessage<APaperStaDetail> {
    private static readonly pb::MessageParser<APaperStaDetail> _parser = new pb::MessageParser<APaperStaDetail>(() => new APaperStaDetail());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<APaperStaDetail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Survey.Core.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperStaDetail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperStaDetail(APaperStaDetail other) : this() {
      questionId_ = other.questionId_;
      oa_ = other.oa_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public APaperStaDetail Clone() {
      return new APaperStaDetail(this);
    }

    /// <summary>Field number for the "question_id" field.</summary>
    public const int QuestionIdFieldNumber = 10;
    private string questionId_ = "";
    /// <summary>
    /// 问题
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string QuestionId {
      get { return questionId_; }
      set {
        questionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oa" field.</summary>
    public const int OaFieldNumber = 11;
    private static readonly pb::FieldCodec<int> _repeated_oa_codec
        = pb::FieldCodec.ForInt32(90);
    private readonly pbc::RepeatedField<int> oa_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// 答案统计信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Oa {
      get { return oa_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as APaperStaDetail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(APaperStaDetail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (QuestionId != other.QuestionId) return false;
      if(!oa_.Equals(other.oa_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (QuestionId.Length != 0) hash ^= QuestionId.GetHashCode();
      hash ^= oa_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (QuestionId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(QuestionId);
      }
      oa_.WriteTo(output, _repeated_oa_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (QuestionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(QuestionId);
      }
      size += oa_.CalculateSize(_repeated_oa_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(APaperStaDetail other) {
      if (other == null) {
        return;
      }
      if (other.QuestionId.Length != 0) {
        QuestionId = other.QuestionId;
      }
      oa_.Add(other.oa_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 82: {
            QuestionId = input.ReadString();
            break;
          }
          case 90:
          case 88: {
            oa_.AddEntriesFrom(input, _repeated_oa_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
